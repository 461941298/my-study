<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjh.study.dao.OrderDao">

    <!--开启命名空间的二级缓存-->
    <cache></cache>

    <!--和别的命令空间共用二级缓存-->
    <!--<cache-ref namespace=""-->


    <select id="getById" resultType="com.yjh.study.entity.Order" parameterType="java.lang.Integer">
      select
        o.id, o.time, o.money, o.status
      from `order` o
      where o.id = #{id}
    </select>

    <resultMap id="orderViewMap" type="com.yjh.study.view.OrderView">
        <result property="orderId" column="orderId"/>
        <result property="orderPrice" column="money"/>
        <result property="createdTime" column="createdTime"/>
        <result property="orderStatus" column="status"/>
    </resultMap>

    <sql id="selectOrderView">
        select
          o.id orderId,
          o.time createdTime,
          o.money money,
          o.status status
        from `order` o
    </sql>

    <select id="getAll" resultMap="orderViewMap">
        <include refid="selectOrderView"></include>
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        `order` (`time`, `money`, `status`)
        VALUES (#{time}, #{money}, #{status});
    </insert>

    <update id="updateMoney">
        UPDATE `order` SET `money`=#{money} WHERE (`id`= #{id})
    </update>

    <select id="selectIf" resultMap="orderViewMap">
        <include refid="selectOrderView"></include>
        where
        <if test="money != null">
            o.money = #{money} and
        </if>
        <if test="status != null">
            o.status = #{status}
        </if>
    </select>

    <select id="selectIfAndWhere" resultMap="orderViewMap">
        <include refid="selectOrderView"></include>
        <where>
            <if test="money != null">
                and o.money = #{money}
            </if>
            <if test="status != null">
                and o.status = #{status}
            </if>
        </where>
    </select>

    <update id="updateIfAndSet">
        update `order`
        <set>
            <if test="money != null">
                money = #{money},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="status">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="insertAndTrim">
        insert `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="money != null">
                money,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="status != null">
                status,
            </if>

        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="money != null">
                #{money},
            </if>
            <if test="time != null">
                #{time},
            </if>
            <if test="status != null">
                #{status},
            </if>
        </trim>
    </insert>

    <select id="getByMoneyForeach" resultMap="orderViewMap">
        <include refid="selectOrderView"></include>
        where o.money in
        <foreach collection="array" open="(" close=")" item="money" index="i" separator=",">
            #{money}
        </foreach>
    </select>

    <insert id="insertByBatch">
        INSERT INTO
        `order` (`time`, `money`, `status`)
        VALUES
        <foreach collection="list"  separator="," index="i" item="order">
            (
            #{order.time},
            #{order.money},
            #{order.status}
            )
        </foreach>
    </insert>

    <select id="getChooseWhen" resultMap="orderViewMap">
        <include refid="selectOrderView"></include>
        <where>
            <choose>
                <when test="money != null">
                    and o.money = #{money}
                </when>
                <when test="status != null">
                    and o.status = #{status}
                </when>
                <otherwise>
                    and 1 = 1
                </otherwise>
            </choose>
        </where>
    </select>
</mapper>